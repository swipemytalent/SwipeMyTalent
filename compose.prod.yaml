services:
  frontend:
    image: ghcr.io/swipemytalent/frontend:${GIT_COMMIT_HASH:-latest}
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=8080"
      - "traefik.http.routers.web.rule=Host(`swipemytalent.com`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
      - "traefik.http.routers.web.middlewares=rate-limit"
      - "traefik.http.middlewares.rate-limit.rateLimit.average=50"
      - "traefik.http.middlewares.rate-limit.rateLimit.burst=100"
    depends_on:
      - backend
    networks:
      - traefik

  backend:
    image: ghcr.io/swipemytalent/backend:${GIT_COMMIT_HASH:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`swipemytalent.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"
      - "traefik.http.routers.backend.middlewares=api-stripprefix"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
    build:
      context: .
      dockerfile: ./backend/Dockerfile.prod
    secrets:
      - jwt
      - db-password
      - db-name
      - db-user
      - allowed-origins
    environment:
      - ALLOWED_ORIGINS_FILE=/run/secrets/allowed-origins
      - NODE_ENV=prod
      - JWT_KEY_FILE=/run/secrets/jwt
      - POSTGRES_DB_FILE=/run/secrets/db-name
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
      - POSTGRES_USER_FILE=/run/secrets/db-user
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    depends_on:
      - postgres
    networks:
      - traefik

  postgres:
    image: postgres:17-alpine
    secrets:
      - db-password
      - db-name
      - db-user
    environment:
      - POSTGRES_DB_FILE=/run/secrets/db-name
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
      - POSTGRES_USER_FILE=/run/secrets/db-user
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg-data:/var/lib/postgresql/data/
    configs:
      - source: init-sql
        target: /docker-entrypoint-initdb.d/init.sql
    networks:
      - traefik

  db-boostrapper:
    image: postgres:17-alpine
    depends_on:
      - postgres
    secrets:
      - db-password
      - db-name
      - db-user
    environment:
      POSTGRES_DB_FILE: /run/secrets/db-name
      POSTGRES_USER_FILE: /run/secrets/db-user
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_HOST: postgres
    volumes:
      - ./backend/db/init-db.sh:/init/init-db.sh
    configs:
      - source: init-sql
        target: /init/init.sql
    entrypoint: [ "sh", "/init/init-db.sh" ]
    networks:
      - traefik

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
    depends_on:
      - postgres
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgres-exporter.rule=Host(`postgres-exporter.swipemytalent.com`)"
      - "traefik.http.routers.postgres-exporter.entrypoints=websecure"
      - "traefik.http.routers.postgres-exporter.tls.certresolver=myresolver"
      - "traefik.http.services.postgres-exporter.loadbalancer.server.port=9187"

  reverse-proxy:
    image: traefik:v3.4.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=sduviviertech@outlook.fr"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik

  prometheus:
    image: prom/prometheus:v3.4.2
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - prometheus-data:/prometheus
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.swipemytalent.com`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana:12.0.2
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATH_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/dashboards:/var/lib/grafana/dashboards
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.swipemytalent.com`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

volumes:
  pg-data:
  letsencrypt:
  prometheus-data:
  grafana-data:

configs:
  init-sql:
    file: ./backend/db/migration/init.sql
  prometheus-config:
    file: ./backend/monitoring/prometheus.yml

secrets:
  db-password:
    external: true
  db-name:
    external: true
  db-user:
    external: true
  jwt:
    external: true
  allowed-origins:
    external: true

networks:
  traefik:
    external: true
